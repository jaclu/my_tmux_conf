#!/bin/sh
#
#  Copyright (c) 2022-2024: Jacob.Lundqvist@gmail.com
#  License: MIT
#
#  Part of https://github.com/jaclu/my_tmux_conf
#
#  Auto-generates new tmux conf and starts tmux
#
#  -q  re-uses current config
#  -s  share session - connects without detaching other connections
#  -2  generates a secondary env, I use this for testing changes and
#      plugins, using asdf to potentially run this with a different
#      tmux version
#
my_tmux_conf_location="/usr/local/my_tmux_conf"

select_tmux_bin() {
    TMUX_BIN=""
    if [ -n "$tmux_bin" ]; then
        # User defined tmux
        TMUX_BIN="$tmux_bin"
        unset tmux_bin
        return
    fi
    if [ -n "$ASDF_DIR" ]; then
        if asdf list | grep -q tmux; then
            TMUX_BIN="$("$ASDF_DIR"/bin/asdf which tmux)"
        fi
    else
        TMUX_BIN="$(command -v tmux)"
    fi
    [ -z "$TMUX_BIN" ] && TMUX_BIN="$(command -v "$tmux_bin")"

    if [ -z "$TMUX_BIN" ]; then
        echo "ERROR: no tmux in PATH!"
        exit 1
    fi

    #  Needs to be $HOME not ~ since it is sent into tmux_conf
    if [ "$t2_env" -eq 1 ]; then
        socket=serv2
        conf_file="$HOME/t2/tmux/tmux.conf"
    else
        socket=default
        conf_file="$HOME/.tmux.conf"
    fi

    tmux_vers="$($TMUX_BIN -V | cut -d ' ' -f 2)"
    #
    #  Handle some odd versions
    #
    case "$tmux_vers" in
    3.1-rc) tmux_vers="3.1" ;; # asdf tmux 3.1 reports as this

    next-3.4)
        #  shellcheck disable=SC2034 # TODO: check why this is alerting
        v_maj="3.4" ;;   # Alpine 3.18 reports as this
    *) ;;
    esac

    echo "myt will use: $tmux_vers"
}

start_tmux() {
    socket_identifier=" -L $socket "
    #  shellcheck disable=SC2009,SC2126
    all_this_socket="$(ps ax | grep -v grep | grep "$socket_identifier" | wc -l)"
    #  shellcheck disable=SC2009,SC2126
    all_this_vers="$(ps ax | grep -v grep | grep "$socket_identifier" | grep "$tmux_vers" | wc -l)"
    [ "$all_this_socket" = "$all_this_vers" ] || {
        echo
        echo "ERROR: $socket instances for version other than: $tmux_vers running!"
        echo
        echo "Found the following processes:"
        echo
        #  shellcheck disable=SC2009
        ps ax | grep -v grep | grep " $socket"
        exit 1
    }

    #
    #  conf file handling
    #
    if $quick_mode; then
        echo "Using existing: $conf_file with: $TMUX_BIN"
    else
        ! T2_ENV="$t2_env" "$my_tmux_conf_location/${profile}.py" -r -t "$TMUX_BIN" "$
conf_file" && exit 2
        ## echo "><> Generating new profile"
        #! "${profile}" -r -t "$TMUX_BIN" "$conf_file" && exit 2
    fi

    cd "$d_initial" || {
        echo "ERROR: Failed to cd back to [$d_initial]"
        exit 1
    }

    echo "TMUX_BIN [$TMUX_BIN] socket [$socket]"
    if $TMUX_BIN -L "$socket" list-sessions | grep -q main; then
        $shared_session && detch="" || detch="-d"
        eval "$TMUX_BIN" -L "$socket" -f "$conf_file" attach-session "$detch" -t main
    else
        $TMUX_BIN -L "$socket" -f "$conf_file" new-session -s main
    fi
    echo "exiting tmux $(date)"
}

regular_tmux() {
    # echo "-> running regular_tmux($profile) [$(hostname)]"
    if [ -z "$profile" ]; then
        detected_hostname="$(hostname | cut -d. -f 1 | tr '[:upper:]' '[:lower:]')"
        # echo "-> detected hostname [$detected_hostname]"
        profile="${my_tmux_conf_location}/${detected_hostname}.py"
        # echo "-> Automatically built profile-name: [$profile]"
    fi

    if [ ! -f "${profile}" ]; then
        echo
        echo "*** Warning: no profile found for: $profile"
        echo "***          using default profile after 3 seconds"
        echo
        sleep 3
        profile="$my_tmux_conf_location/default_plugins.py"
    else
        # handle soft links to other directories
        profile="$(realpath "$profile")"
    fi

    select_tmux_bin
    start_tmux
    #$TMUX_BIN -u new-session -ADs main
}

tmux_2() {
    if [ -z "$profile" ]; then
        profile="t2"
    fi

    #
    # run from this location to pick up alternate tmux versions
    # defined in this location
    #
    mkdir -p "$HOME"/t2

    # To help pick up the right tmux go here to search
    cd ~/t2 || exit

    select_tmux_bin
    start_tmux
}

display_help() {
    cat <<EOF
Usage: myt [-q] [-2] [profile]

Generates config and starts tmux
Default profile is hostname
Options can be given in any order.

Availlable options:

-h       Print this help and exit.
-c       Use this tmux binary (default tmux)
-s       Share session
-q       Dont generate config, start tmux direcly
-2       Run in T2_ENV (inner tmux, other prefix)
profile  Run using specific profile
EOF
    exit 0
}

shared_session=false
quick_mode=false
t2_env=0
profile=""
d_initial="$PWD" # original pwd

while [ -n "$1" ]; do
    case "$1" in
    "-h" | "--help") display_help ;;
    "-c")
        shift
        tmux_bin="$1"
        ;;
    "-s") shared_session=true ;;
    "-q") quick_mode=true ;;
    "-2") t2_env=1 ;;
    *) profile="$1" ;;
    esac

    shift
done

if [ "$t2_env" -eq 1 ]; then
    tmux_2
else
    regular_tmux
fi
