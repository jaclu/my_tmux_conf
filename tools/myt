#!/bin/sh
#
#  Copyright (c) 2022: Jacob.Lundqvist@gmail.com
#  License: MIT
#
#  Part of https://github.com/jaclu/my_tmux_conf
#
#  Auto-generates new .tmux.conf and starts it
#
#  -2 generates a secondary env, I use this for testing changes and plugins
#  using asdf to potentially run this with a different tmux version
#

version="1.1.0"
my_tmux_conf_location="/usr/local/my_tmux_conf"

select_tmux_bin() {
    if [ -n "$ASDF_DIR" ]; then
        TMUX_BIN="$($ASDF_DIR/bin/asdf which tmux)"
    else
        TMUX_BIN="$(command -v "$tmux_bin")"
    fi
    echo ">> myt tmux_bin [$TMUX_BIN]"
    if [ -z "$TMUX_BIN" ]; then
        echo "ERROR: no tmux in PATH!"
        exit 1
    fi
}

regular_tmux() {
    # echo "-> running regular_tmux($profile) [$(hostname)]"
    if [ -z "$profile" ]; then
        detected_hostname="$(hostname | cut -d. -f 1 | tr '[:upper:]' '[:lower:]')"
        # echo "-> detected hostname [$detected_hostname]"
        profile="${my_tmux_conf_location}/${detected_hostname}.py"
        # echo "-> Automatically built profile-name: [$profile]"
    fi

    if [ ! -f "${profile}" ]; then
        echo
        echo "*** Warning: no profile found for: $profile"
        echo "***          using default profile"
        echo
        profile="${my_tmux_conf_location}/default_plugins.py"
    else
        # handle soft links to other directories
        profile="$(realpath "$profile")"
    fi

    select_tmux_bin

    # echo ">> profile used: $profile"
    #
    #  generate a fresh .tmux.conf
    #
    if [ "$quick_mode" -eq 0 ]; then
        ! "${profile}" -r -t "$TMUX_BIN" && exit 2
    fi
    "$TMUX_BIN" -u new-session -ADs main
}

tmux_2() {
    if [ -z "$profile" ]; then
        profile="t2"
    fi

    #
    # run from this location to pick up alternate tmux versions
    # defined in this location
    #
    mkdir -p "$HOME"/t2
    cd ~/t2 || exit

    select_tmux_bin

    #  Needs to be $HOME not ~ since it is sent into tmux_conf
    conf_file="$HOME/t2/tmux/tmux.conf"

    if [ "$quick_mode" -eq 0 ]; then
        #  ensure previously used tmux bin is not picked up
        rm -f "$conf_file"
        ! T2_ENV=1 "${my_tmux_conf_location}/${profile}.py" -t "$TMUX_BIN" -r "$conf_file" && exit 2
    fi

    "$TMUX_BIN" -f ~/t2/tmux/tmux.conf -L serv2
}

display_help() {
    cat <<EOF
Usage: myt [-q] [-2] [profile]

Generates config and starts tmux
Default profile is hostname
Options can be given in any order.

Availlable options:

-h  --help      Print this help and exit.
-v  --version   Print version and exit.
-c  --command   Use this tmux binary (default tmux)
-q              Dont generate config, start tmux direcly
-2              Run in T2_ENV (inner tmux, other prefix)
profile         Run using specific profile
EOF
    exit 0
}

quick_mode=0
t2_env=0
profile=""
tmux_bin="tmux"

while [ -n "$1" ]; do
    case "$1" in

    "-h" | "--help") display_help ;;

    "-v" | "--version")
        echo "myt $version"
        exit 0
        ;;

    "-c" | "--command")
        shift
        tmux_bin="$1"
        ;;

    "-q") quick_mode=1 ;;

    "-2") t2_env=1 ;;

    *)
        profile="$1"
        ;;
    esac

    shift
done

if [ "$t2_env" -eq 1 ]; then
    tmux_2
else
    regular_tmux
fi
